{"version":3,"sources":["addMoreEventLogo.svg","NewEvent.js","TodayTask.js","LoginIn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","moment","locale","Option","Select","TextArea","Input","NewEvent","useState","startTime","setStartTime","clickState","setClickState","confirmLoading","setConfirmLoading","Form","useForm","form","tailLayout","wrapperCol","offset","span","disableEndTime","endTime","src","addMoreEventLogo","draggable","className","alt","title","onClick","style","transform","visible","onOk","setTimeout","onCancel","footer","tip","spinning","labelCol","name","onFinish","values","Promise","resolve","reject","tempImfo","JSON","stringify","tempTag","eventTitle","localStorage","setItem","getItem","then","suc","resetFields","err","alert","onFinishFailed","errorInfo","Item","label","rules","required","message","defaultValue","disabledDate","current","value","onChange","theStartTime","showToday","placeholder","noStyle","shouldUpdate","prevValues","currentValues","eventType","getFieldValue","showTime","min","step","formatter","rows","type","htmlType","CardList","tasks","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","header","length","itemLayout","renderItem","props","eventNote","TodayTask","tempTask","i","key","push","parse","getAllImfo","LoginIn","width","prefix","UserOutlined","LockOutlined","href","Header","Layout","Footer","Sider","Content","App","headerTip","backgroundColor","size","icon","marginTop","color","height","fullscreen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.e3de70e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/addMoreEventLogo.26490a3c.svg\";","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Button, DatePicker,Select ,InputNumber,Modal,Spin} from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nimport addMoreEventLogo from './addMoreEventLogo.svg';\r\n\r\nmoment.locale('zh-cn');\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nconst NewEvent = () => {\r\n  const [startTime, setStartTime] = useState(moment());\r\n  const [clickState, setClickState] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const onFinish = values => {\r\n    setConfirmLoading(true);\r\n    const promiseStore=new Promise((resolve,reject)=>{\r\n        var tempImfo =JSON.stringify(values);\r\n        var tempTag = values.eventTitle;\r\n        localStorage.setItem(tempTag,tempImfo);\r\n        if(!!localStorage.getItem(tempTag)){\r\n            resolve();\r\n        }\r\n        \r\n    });\r\n    promiseStore.then((suc)=>{\r\n            setClickState(false);\r\n            setConfirmLoading(false);\r\n            form.resetFields();\r\n    },(err)=>{alert('Fail');});\r\n  };\r\n  const onFinishFailed = errorInfo => {\r\n    alert(\"Failed : \"+ errorInfo);\r\n  };\r\n  const layout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 16 },\r\n  }\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 18, span: 16 },\r\n  }\r\n  function disableStartTime(current){\r\n    return current && current < moment();\r\n  \r\n  }\r\n  function disableEndTime(endTime){\r\n    return endTime && endTime < startTime;\r\n  \r\n  }\r\n  function handleOk(){\r\n      setConfirmLoading(true);\r\n    setTimeout(() => {\r\n        setClickState(false);\r\n        setConfirmLoading(false);\r\n    }, 1000);\r\n  }\r\n\r\n  function handleCancle(){\r\n    setClickState(false);\r\n }\r\n function startDrag(ev){\r\n\r\n }\r\n  return (\r\n      <div>\r\n        <img src={addMoreEventLogo}\r\n        draggable\r\n        className=\"AddMoreEvent-logo\" \r\n        alt=\"点此添加事件\" \r\n        title=\"添加事件\" \r\n        onClick={()=>setClickState(!clickState)}\r\n        style={\r\n            clickState ? ({transform:'rotate(45deg)',}):({transform:'rotate(0deg)',})\r\n        }\r\n        />\r\n        <Modal\r\n        title='添加新事件'\r\n        visible={clickState}\r\n        onOk={handleOk}\r\n        onCancel={handleCancle}\r\n        footer={null}\r\n\r\n        >\r\n            <Spin  tip=\"上传中\" spinning={confirmLoading}>\r\n            <Form \r\n            {...layout}\r\n            name=\"NewEventInfo\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            form={form}\r\n            >\r\n            <Form.Item\r\n                label=\"标题\"\r\n                name=\"eventTitle\"\r\n                rules={[{ required: true, message: \"请输入事件标题\" }]}\r\n            >\r\n                <Input  />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"开始时间\"\r\n                name=\"eventStartTime\"\r\n                rules={[{required:true,message:\"请输入事件开始时间\"}]}\r\n                >\r\n                <DatePicker defaultValue={moment()} disabledDate={disableStartTime} value={startTime}\r\n                onChange={(theStartTime)=>setStartTime(theStartTime)} showToday={true}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"事件类型\"\r\n                name=\"eventType\"\r\n                rules={[{required:true,message:\"请选择事件类型\"}]}\r\n            >\r\n                <Select\r\n                placeholder=\"选择事件类型\"\r\n                >\r\n                <Option value=\"shortTermTask\">短期任务</Option>\r\n                <Option value=\"longTermPlan\">长期计划</Option>\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n            noStyle\r\n            shouldUpdate={(prevValues,currentValues)=>prevValues.eventType !== currentValues.eventType}\r\n            >\r\n                {({getFieldValue})=>{\r\n                return getFieldValue('eventType')==='shortTermTask'?(\r\n                    <Form.Item\r\n            label=\"结束时间\"\r\n            name=\"eventEndTime\"\r\n            rules={[{required:true,message:'请填写截止日期与时间'}]}>\r\n                <DatePicker  showTime disabledDate={disableEndTime}/>\r\n            </Form.Item>\r\n                ):null;\r\n                }}\r\n            </Form.Item>\r\n            <Form.Item\r\n            noStyle\r\n            shouldUpdate={(prevValues,currentValues)=>prevValues.eventType !== currentValues.eventType}\r\n            >\r\n                {\r\n                ({getFieldValue})=>{\r\n                    return getFieldValue('eventType')==='shortTermTask'?(\r\n                    <Form.Item\r\n                    label=\"预估所需时长\"\r\n                    name=\"eventDuration\"\r\n                    rules={[{required:false}]}\r\n                    >\r\n                        <InputNumber min={0} step={0.1} formatter={value => `${value} h`} defaultValue={2}/>\r\n                    </Form.Item>\r\n                    ):null;\r\n                }\r\n                }\r\n            </Form.Item>\r\n            <Form.Item\r\n            noStyle\r\n            shouldUpdate={(prevValues,currentValues)=>prevValues.eventType !== currentValues.eventType}>\r\n                {\r\n                ({getFieldValue})=>{\r\n                    return getFieldValue('eventType')==='longTermPlan'?(\r\n                    <Form.Item\r\n                    label=\"打卡周期\"\r\n                    name=\"eventPeriod\"\r\n                    rules={[{required:true}]}\r\n                    >\r\n                        <Select\r\n                        placeholder=\"每天/每周/每月\"\r\n                        >\r\n                        <Option value=\"everyDay\">每天</Option>\r\n                        <Option value=\"everyWeek\">每周</Option>\r\n                        <Option value=\"everyMonth\">每月</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    ):null;\r\n                }\r\n                }\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                label=\"备注\"\r\n                name = \"eventNote\"\r\n                rules={[{ required: false, }]}>\r\n                <TextArea rows={2}/>\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout} >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                完成\r\n                </Button>\r\n\r\n            </Form.Item>\r\n            </Form>\r\n\r\n            </Spin>\r\n            \r\n        </Modal>\r\n      </div>\r\n\r\n  );\r\n\r\n}\r\nexport default NewEvent;","import React, { useState } from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { Card,List} from 'antd'\r\nimport { getFileItem } from 'antd/lib/upload/utils';\r\n\r\nconst CardList=({tasks})=>(\r\n    <List \r\n    grid={{\r\n        gutter: 16,\r\n        xs: 1,\r\n        sm: 2,\r\n        md: 4,\r\n        lg: 4,\r\n        xl: 6,\r\n        xxl: 3,\r\n      }}\r\n    dataSource={tasks}\r\n    header={`${tasks.length} 个任务`}\r\n    itemLayout=\"horizontal\"\r\nrenderItem={props =><Card title={props.eventTitle}><p>{props.eventNote}</p></Card>}\r\n    />\r\n);\r\n\r\nconst TodayTask=()=>{\r\n\r\n    function getAllImfo(){\r\n        var tempTask=[];\r\n        for(let i=0;i<localStorage.length;i++){\r\n            let tempTag=localStorage.key(i);\r\n            tempTask.push(JSON.parse(localStorage.getItem(tempTag)));\r\n        }\r\n        return tempTask;\r\n    }  \r\n    return (\r\n        <div>\r\n            { <CardList tasks={getAllImfo()} />}\r\n        </div>\r\n        \r\n    );\r\n\r\n};\r\n\r\nexport default TodayTask;","import React, { useState } from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { Modal, Form, Input, Button, Checkbox, Space } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { getFileItem } from 'antd/lib/upload/utils';\r\nimport { LoginOutlined } from '@ant-design/icons';\r\nimport './LoginIn.css'\r\n\r\nconst LoginIn = (visible) => {\r\n    const onFinish = values => {\r\n        alert(JSON.stringify(values));\r\n        \r\n    };\r\n    const layout = {\r\n        wrapperCol: { offset:2,span: 20 },\r\n    }\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 14 },\r\n    }\r\n    return (\r\n        <Modal visible={visible}\r\n            footer={null}\r\n            title='登录'\r\n            width={450}\r\n        >\r\n            <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                onFinish={onFinish}\r\n                {...layout}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: '请输入用户名' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                        placeholder=\"用户名\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: '请输入密码' }]}\r\n                >\r\n                    <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"密码\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <a className=\"login-form-forgot\" href=\"\">忘记密码</a>\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Space>\r\n                        <Button type=\"default\">暂不登录</Button>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\r\n                        >\r\n                            登录\r\n        </Button>\r\n                    </Space>\r\n\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default LoginIn;","import React, { useState } from 'react';\nimport { Layout,Calendar ,Avatar} from 'antd';\nimport './App.css';\nimport \"antd/dist/antd.css\";\nimport 'moment/locale/zh-cn';\nimport NewEvent from './NewEvent'\nimport TodayTask from './TodayTask';\nimport { UserOutlined } from '@ant-design/icons';\nimport LoginIn from './LoginIn'\n\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction App() {\n  const [headerTip,setHeaderTip]=useState('今日待办')\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Sider style={{backgroundColor:'white'}}>\n          <Avatar size={100} icon={<UserOutlined />} style={{marginTop:'5vh'}}/>\n          <p>你好</p>\n        </Sider>\n        <Layout>\n          <Header style={{color:'white',height:'10vh'}} >{headerTip}</Header>\n          <Layout>\n            <Content style={{height:'85vh'}}>\n              <TodayTask/>\n              </Content>\n            <Sider style={{color:'white'}} width={300}>\n            <Calendar fullscreen={false} />\n            </Sider>\n          </Layout>\n          <Footer style={{height:'5vh'}}>曼婷制作</Footer>\n        </Layout>\n      </Layout>\n\n        <NewEvent />\n        <LoginIn  visible={true}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}