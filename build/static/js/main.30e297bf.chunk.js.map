{"version":3,"sources":["addMoreEventLogo.svg","LoginIn.js","NewEvent.js","TodayTask.js","ShowTasks.js","Todo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginIn","tailLayout","wrapperCol","offset","history","useHistory","gutter","align","style","height","span","title","opacity","name","className","onFinish","values","alert","JSON","stringify","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","href","onClick","push","htmlType","moment","locale","Option","Select","TextArea","Input","NewEvent","addTasks","useState","startTime","setStartTime","clickState","setClickState","confirmLoading","setConfirmLoading","Form","useForm","form","disableEndTime","endTime","isBefore","src","addMoreEventLogo","draggable","alt","transform","visible","onOk","setTimeout","onCancel","footer","tip","spinning","labelCol","id","uuidv4","Promise","resolve","reject","then","suc","resetFields","err","console","log","onFinishFailed","errorInfo","label","disabledDate","current","value","onChange","theStartTime","showToday","noStyle","shouldUpdate","prevValues","currentValues","eventType","getFieldValue","showTime","min","step","defaultValue","rows","CardList","allocationInDex","tasks","remove","punchCard","index","emptyText","itemLayout","dataSource","header","length","props","CSSTransition","key","timeout","classNames","backgroundColor","padding","marginBottom","fontSize","textAlign","actions","defaultChecked","e","target","checked","Meta","eventTitle","description","eventNote","TodayTask","todayAllTasks","removeTask","margin","ShowTasks","allTasks","changeTask","theTask","setTheTask","showDrawer","setShowDrawer","changing","setChanging","renderItem","item","EditOutlined","width","placement","closable","onClose","onConfirm","okText","cancelText","eventStartTime","eventEndTime","eventPeriod","eventDuration","Header","Layout","Footer","Sider","Content","ShowPunchTimes","punchTimes","gridStyle","Grid","t","times","valueStyle","color","suffix","Todo","headerTip","getAllImfo","setAllTasks","getDeadlinesTask","deadlines","setDeadlines","getPunchTimes","setPunchTimes","findTodayTasks","setTodayAllTasks","findFutureTasks","futureTasks","setFutureTasks","short","forEach","arr","localStorage","getItem","parse","allTheTasks","todayTasks","fuTask","i","isSameOrBefore","long","lastTime","sort","value1","value2","subtract","isAfter","concat","priority","fuTasks","diff","obj1","obj2","theEvent","tallTasks_copy","slice","splice","removeItem","setItem","result","task","allTasks_copy","temp","Object","keys","m","undefined","fullscreen","dateCellRender","list","isSame","map","content","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.30e297bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/addMoreEventLogo.c2af93ec.svg\";","import React, { useState } from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Button, Space, Card, Col, Row } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { getFileItem } from 'antd/lib/upload/utils';\r\nimport { LoginOutlined } from '@ant-design/icons';\r\nimport './LoginIn.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoginIn = () => {\r\n    const onFinish = values => {\r\n        alert(JSON.stringify(values));\r\n\r\n    };\r\n\r\n    const layout = {\r\n        wrapperCol: { offset: 2, span: 20 },\r\n    }\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 14 },\r\n    }\r\n    let history = useHistory();\r\n    function handleNotLogin(){\r\n        \r\n        history.push(\"/todo\");\r\n   }\r\n    return (\r\n        <Row gutter={16} align=\"middle\" style={{height:'100vh'}}>\r\n            <Col span={8} offset={8}>\r\n                <Card\r\n                    title=\"登录\"\r\n                    style={{opacity:'0.95'}}\r\n                >\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        onFinish={onFinish}\r\n                        {...layout}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: '请输入用户名' }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                placeholder=\"用户名\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: '请输入密码' }]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <a className=\"login-form-forgot\" href=\"\">忘记密码</a>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Space>\r\n                                <Button type=\"default\" onClick={handleNotLogin}>暂不登录</Button>\r\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\r\n                                >\r\n                                    登录\r\n        </Button>\r\n                            </Space>\r\n\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginIn;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Button, DatePicker, Select, InputNumber, Modal, Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nimport addMoreEventLogo from './addMoreEventLogo.svg';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nmoment.locale('zh-cn');\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst NewEvent = ({ addTasks }) => {\r\n    const [startTime, setStartTime] = useState(moment());\r\n    const [clickState, setClickState] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [form] = Form.useForm();\r\n    const onFinish = values => {\r\n        values.id = uuidv4();\r\n        setConfirmLoading(true);\r\n        const promiseStore = new Promise((resolve, reject) => {\r\n            addTasks(values);\r\n            resolve();\r\n        });\r\n        promiseStore.then((suc) => {\r\n            setClickState(false);\r\n            setConfirmLoading(false);\r\n            form.resetFields();\r\n        }, (err) => {\r\n            console.log(err);\r\n            alert('Fail');\r\n        });\r\n    };\r\n    const onFinishFailed = errorInfo => {\r\n        alert(\"Failed : \" + errorInfo);\r\n    };\r\n    const layout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 16 },\r\n    }\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 18, span: 16 },\r\n    }\r\n    function disableStartTime(current) {\r\n        return current && moment(current).isBefore(moment(), 'days');\r\n\r\n    }\r\n    function disableEndTime(endTime) {\r\n        return endTime && moment(endTime).isBefore(startTime, 'days');\r\n\r\n    }\r\n    function handleOk() {\r\n        setConfirmLoading(true);\r\n        setTimeout(() => {\r\n            setClickState(false);\r\n            setConfirmLoading(false);\r\n        }, 1000);\r\n    }\r\n\r\n    function handleCancle() {\r\n        setClickState(false);\r\n    }\r\n    function startDrag(ev) {\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <img src={addMoreEventLogo}\r\n                draggable\r\n                className=\"AddMoreEvent-logo\"\r\n                alt=\"点此添加事件\"\r\n                title=\"添加事件\"\r\n                onClick={() => setClickState(!clickState)}\r\n                style={\r\n                    clickState ? ({ transform: 'rotate(45deg)', }) : ({ transform: 'rotate(0deg)', })\r\n                }\r\n            />\r\n            <Modal\r\n                title='添加新事件'\r\n                visible={clickState}\r\n                onOk={handleOk}\r\n                onCancel={handleCancle}\r\n                footer={null}\r\n\r\n            >\r\n                <Spin tip=\"上传中\" spinning={confirmLoading}>\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"NewEventInfo\"\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        form={form}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"标题\"\r\n                            name=\"eventTitle\"\r\n                            rules={[{ required: true, message: \"请输入事件标题\" }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"开始时间\"\r\n                            name=\"eventStartTime\"\r\n                            rules={[{ required: true, message: \"请输入事件开始时间\" }]}\r\n                        >\r\n                            <DatePicker disabledDate={disableStartTime} value={startTime}\r\n                                onChange={(theStartTime) => setStartTime(theStartTime)} showToday={true} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"事件类型\"\r\n                            name=\"eventType\"\r\n                            rules={[{ required: true, message: \"请选择事件类型\" }]}\r\n                        >\r\n                            <Select\r\n                                placeholder=\"选择事件类型\"\r\n                            >\r\n                                <Option value=\"shortTermTask\">短期任务</Option>\r\n                                <Option value=\"longTermPlan\">长期计划</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            noStyle\r\n                            shouldUpdate={(prevValues, currentValues) => prevValues.eventType !== currentValues.eventType}\r\n                        >\r\n                            {({ getFieldValue }) => {\r\n                                return getFieldValue('eventType') === 'shortTermTask' ? (\r\n                                    <Form.Item\r\n                                        label=\"结束时间\"\r\n                                        name=\"eventEndTime\"\r\n                                        rules={[{ required: true, message: '请填写截止日期与时间' }]}>\r\n                                        <DatePicker showTime disabledDate={disableEndTime} />\r\n                                    </Form.Item>\r\n                                ) : null;\r\n                            }}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            noStyle\r\n                            shouldUpdate={(prevValues, currentValues) => prevValues.eventType !== currentValues.eventType}\r\n                        >\r\n                            {\r\n                                ({ getFieldValue }) => {\r\n                                    return getFieldValue('eventType') === 'shortTermTask' ? (\r\n                                        <Form.Item\r\n                                            label=\"预估所需时长\"\r\n                                            name=\"eventDuration\"\r\n                                            rules={[{ required: false }]}\r\n                                        >\r\n                                            <InputNumber min={0} step={0.5} defaultValue={2} />\r\n                                        </Form.Item>\r\n                                    ) : null;\r\n                                }\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            noStyle\r\n                            shouldUpdate={(prevValues, currentValues) => prevValues.eventType !== currentValues.eventType}>\r\n                            {\r\n                                ({ getFieldValue }) => {\r\n                                    return getFieldValue('eventType') === 'longTermPlan' ? (\r\n                                        <Form.Item\r\n                                            label=\"打卡周期\"\r\n                                            name=\"eventPeriod\"\r\n                                            rules={[{ required: true }]}\r\n                                        >\r\n                                            <Select\r\n                                                placeholder=\"每天/每周/每月\"\r\n                                            >\r\n                                                <Option value=\"everyDay\">每天</Option>\r\n                                                <Option value=\"everyWeek\">每周</Option>\r\n                                                <Option value=\"everyMonth\">每月</Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    ) : null;\r\n                                }\r\n                            }\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"备注\"\r\n                            name=\"eventNote\"\r\n                            rules={[{ required: false, }]}>\r\n                            <TextArea rows={2} />\r\n                        </Form.Item>\r\n                        <Form.Item {...tailLayout} >\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                完成\r\n                </Button>\r\n\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default NewEvent;","import React, { useState } from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { List, Checkbox } from 'antd';\r\nimport {\r\n    CSSTransition,\r\n    TransitionGroup\r\n} from 'react-transition-group';\r\n\r\nconst CardList = ({ tasks,remove,punchCard }) => {\r\n    const [allowAnimate,setAllowAnimate]=useState(false)\r\n    function* allocationInDex(){\r\n        var index=0;\r\n        while(true){\r\n            yield index++;\r\n        }\r\n    }\r\n    const [indexIterator, setIterator]=useState(allocationInDex());\r\n    const [key, setKey]=useState(0);\r\n    return (\r\n        \r\n    <List\r\n    locale={{emptyText:'今日暂无无任务'}}\r\n        itemLayout=\"horizontal\"\r\n        dataSource={tasks}\r\n        header={`${tasks.length} 个任务`}\r\n        itemLayout=\"horizontal\"\r\n        renderItem={props =>\r\n            <CSSTransition key={props.id} timeout={8000} classNames=\"item\">\r\n                <List.Item \r\n                style={{ backgroundColor: 'white', padding: '15px', marginBottom: '5px', fontSize: 'large', textAlign: 'left' }}\r\n                actions={[\r\n                    <Checkbox defaultChecked={false} onChange={(e)=>{\r\n                        if(e.target.checked){ \r\n                            if(props.eventType==='shortTermTask')\r\n                            {remove(props);}\r\n                            else\r\n                            {punchCard(props);}\r\n                            }}}>{props.eventType==='shortTermTask' ? '完成':'打卡'}\r\n                            </Checkbox>\r\n                    ]}\r\n                >\r\n                    <List.Item.Meta\r\n                    title={<p>{props.eventTitle}</p>}\r\n                    description={props.eventNote}\r\n                    >\r\n\r\n                    </List.Item.Meta>\r\n                        \r\n                </List.Item>\r\n            </CSSTransition>}\r\n    >\r\n\r\n    </List>\r\n\r\n\r\n);}\r\n\r\nconst TodayTask = ({ todayAllTasks,removeTask,punchCard}) => {\r\n\r\n    return (\r\n        <div style={{ margin: '0 10px', padding: '0 2vw' }}>\r\n            {<CardList tasks={todayAllTasks} remove={removeTask} punchCard={punchCard}/>}\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default TodayTask;","import { List, Drawer, Button, Form, Spin, Input, DatePicker, Select, InputNumber, Row, Col, Popconfirm} from 'antd';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport React, { useState, useForm } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport moment from 'moment';\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst ShowTasks = ({ allTasks,removeTask,changeTask }) => {\r\n    const [startTime, setStartTime] = useState(moment());\r\n    const [theTask, setTheTask] = useState({});\r\n    const [showDrawer, setShowDrawer] = useState(false);\r\n    const [changing, setChanging] = useState(false);\r\n    const [form] = Form.useForm();\r\n    const layout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 16 },\r\n    }\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 18, span: 16 },\r\n    }\r\n    function onFinish(values) {\r\n        values.id=theTask.id;\r\n        setChanging(true);\r\n        const promiseStore = new Promise((resolve, reject) => {\r\n            changeTask(values);\r\n            resolve();\r\n        });\r\n        promiseStore.then((suc) => {\r\n            setChanging(false);\r\n            setShowDrawer(false);\r\n        }, (err) => {\r\n            console.log(err);\r\n            alert('Fail');\r\n        });\r\n\r\n    }\r\n    function onFinishFailed() {\r\n\r\n    }\r\n    function disableStartTime(current) {\r\n        return current && moment(current).isBefore(moment(), 'days');\r\n\r\n    }\r\n    function disableEndTime(endTime) {\r\n        return endTime && moment(endTime).isBefore(startTime, 'days');\r\n\r\n    }\r\n    function confirm(e) {\r\n        alert(JSON.stringify(theTask));\r\n        removeTask(theTask);\r\n        setShowDrawer(false);\r\n      }\r\n      \r\n      function cancel(e) {\r\n      }\r\n    return (\r\n        <>\r\n            <InfiniteScroll\r\n            >\r\n                <List\r\n                    style={{ padding: '10px 0' }}\r\n                    header='所有任务'\r\n                    locale={{ emptyText: '无任务' }}\r\n                    dataSource={allTasks}\r\n                    renderItem={item => (\r\n                        <List.Item\r\n                        key={item.id}\r\n                            style={{ backgroundColor: '#F0FFFF' }}\r\n                            actions={[\r\n                                <EditOutlined key='edit' onClick={() => { setShowDrawer(true); setTheTask(item); }} />,\r\n                            ]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                title={item.eventTitle}\r\n\r\n                            ></List.Item.Meta>\r\n                        </List.Item>\r\n                    )}\r\n\r\n                />\r\n\r\n\r\n            </InfiniteScroll>\r\n            <Drawer\r\n                width={400}\r\n                placement=\"right\"\r\n                closable={false}\r\n                visible={showDrawer}\r\n                onClose={() => { setShowDrawer(false) }}\r\n                title={<Row>\r\n                    <Col span={11} style={{ fontSize: 'large' }}>{theTask.eventTitle}</Col>\r\n                    <Popconfirm\r\n                    title=\"确定删除该事项吗?\"\r\n                    onConfirm={confirm}\r\n                    onCancel={cancel}\r\n                    okText=\"删除\"\r\n                    cancelText=\"取消\">\r\n                        <Col offset={10} style={{ fontSize: 'small' }}><a style={{ textAlign: 'right' }}>删除</a></Col>\r\n                    </Popconfirm>\r\n                </Row>}\r\n\r\n            >\r\n\r\n\r\n                <Spin\r\n                    tip='更改中'\r\n                    spinning={changing}\r\n                >\r\n\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"taskChange\"\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        form={form}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"标题\"\r\n                            name=\"eventTitle\"\r\n\r\n                        >\r\n                            <Input defaultValue={theTask.eventTitle} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"开始时间\"\r\n                            name=\"eventStartTime\"\r\n                        >\r\n                            <DatePicker\r\n                                disabledDate={disableStartTime}\r\n                                value={startTime}\r\n                                defaultValue={moment(theTask.eventStartTime)}\r\n                                onChange={(theStartTime) => setStartTime(theStartTime)}\r\n                                showToday={true} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            noStyle\r\n                            shouldUpdate={(prevValues, currentValues) => prevValues.eventType !== currentValues.eventType}\r\n                        >\r\n                            {() => {\r\n                                return theTask.eventType === 'shortTermTask' ? (\r\n                                    <Form.Item\r\n                                        label=\"结束时间\"\r\n                                        name=\"eventEndTime\"\r\n                                    >\r\n                                        <DatePicker\r\n                                            defaultValue={moment(theTask.eventEndTime)}\r\n                                            showTime\r\n                                            disabledDate={disableEndTime} />\r\n                                    </Form.Item>\r\n                                ) : (<Form.Item\r\n                                    label=\"打卡周期\"\r\n                                    name=\"eventPeriod\"\r\n\r\n                                >\r\n                                    <Select\r\n                                        placeholder=\"每天/每周/每月\"\r\n                                        defaultValue={theTask.eventPeriod}\r\n\r\n                                    >\r\n                                        <Option value=\"everyDay\">每天</Option>\r\n                                        <Option value=\"everyWeek\">每周</Option>\r\n                                        <Option value=\"everyMonth\">每月</Option>\r\n                                    </Select>\r\n                                </Form.Item>);\r\n                            }}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            noStyle\r\n                            shouldUpdate={(prevValues, currentValues) => prevValues.eventType !== currentValues.eventType}\r\n                        >\r\n                            {\r\n                                () => {\r\n                                    return theTask.eventType === 'shortTermTask' ? (\r\n                                        <Form.Item\r\n                                            label=\"预估所需时长\"\r\n                                            name=\"eventDuration\"\r\n\r\n                                        >\r\n                                            <InputNumber min={0} step={0.5} defaultValue={theTask.eventDuration} />\r\n                                        </Form.Item>\r\n                                    ) : null;\r\n                                }\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"备注\"\r\n                            name=\"eventNote\"\r\n                        >\r\n                            <Input defaultValue={theTask.eventNote} />\r\n                        </Form.Item>\r\n                        <Form.Item  {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">完成 </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </Spin>\r\n\r\n            </Drawer>\r\n        </>);\r\n\r\n}\r\n\r\nexport default ShowTasks;","import NewEvent from './NewEvent'\r\nimport TodayTask from './TodayTask';\r\nimport ShowTasks from './ShowTasks';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport React, { useState } from 'react';\r\nimport { Layout, Calendar, Badge, Popover, Card, List, Statistic } from 'antd';\r\nimport './App.css';\r\nimport \"antd/dist/antd.css\";\r\nimport 'moment/locale/zh-cn';\r\nimport moment from 'moment';\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nconst Todo = () => {\r\n    const [headerTip, setHeaderTip] = useState('今日待办');\r\n    const [allTasks, setAllTasks] = useState(getAllImfo());\r\n    const [deadlines, setDeadlines] = useState(getDeadlinesTask(getAllImfo()));\r\n    const [punchTimes, setPunchTimes] = useState(getPunchTimes(getAllImfo()));\r\n    const [todayAllTasks, setTodayAllTasks] = useState(findTodayTasks(getAllImfo()));\r\n    const [futureTasks, setFutureTasks] = useState(findFutureTasks(getAllImfo()));\r\n\r\n    function getDeadlinesTask(tasks) {\r\n        let short = [];\r\n        tasks.forEach(function (item, index, arr) {\r\n            if (item.eventType === 'shortTermTask') {\r\n                short.push(item);\r\n            }\r\n        });\r\n        return short;\r\n\r\n\r\n    }\r\n    function getAllImfo() {\r\n        if (localStorage.getItem('tasks') != null)\r\n            return JSON.parse(localStorage.getItem('tasks'));\r\n        else\r\n            return [];\r\n    }\r\n    function priority(tasks) {\r\n        let short = [];\r\n        let long = [];\r\n        tasks.forEach(function (item, index, arr) {\r\n            if (item.eventType === 'shortTermTask') {\r\n                short.push(item);\r\n            }\r\n            else {\r\n                if (!item.lastTime || moment(item.lastTime).isBefore(moment(), 'days')) { long.push(item); }\r\n            }\r\n        });\r\n        short.sort((value1, value2) => {\r\n            if (moment(value1.eventEndTime).subtract(value1.eventDuration, 'hours').isAfter(moment(value2.eventEndTime).subtract(value2.eventDuration, 'hours'))) {\r\n                return -1;\r\n            } else return 1;\r\n        });\r\n        long.sort((value1, value2) => {\r\n            if (value1.eventPeriod !== value2.eventPeriod) {\r\n                if (value2.eventPeriod === 'everyDay') { return -1; }\r\n                else {\r\n                    if (value2.eventPeriod === 'everyMonth') { return 1; }\r\n                    else {\r\n                        if (value1.eventPeriod === 'everyMonth') { return -1; }\r\n                        else return 1;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                return 1;\r\n            }\r\n        });\r\n        return short.concat(long);\r\n\r\n    }\r\n    function findTodayTasks(allTheTasks) {\r\n        let todayTasks = [];\r\n        let fuTask = [];\r\n        for (let i = 0; i < allTheTasks.length; i++) {\r\n            if (moment(allTheTasks[i].eventStartTime).isSameOrBefore(moment(), 'days')) {\r\n                todayTasks.push(allTheTasks[i]);\r\n            } else {\r\n                fuTask.push(allTheTasks[i]);\r\n            }\r\n        }\r\n        return priority(todayTasks);\r\n    }\r\n    function findFutureTasks(allTheTasks) {\r\n        let fuTasks = [];\r\n        for (let i = 0; i < allTheTasks.length; i++) {\r\n            if (moment(allTheTasks[i].eventStartTime).isAfter(moment(), 'days')) {\r\n                fuTasks.push(allTheTasks[i]);\r\n            }\r\n        }\r\n        return fuTasks;\r\n    }\r\n\r\n    function addTask(task) {\r\n        localStorage.setItem('tasks', JSON.stringify([...allTasks, task]));\r\n        setAllTasks([...allTasks, task]);\r\n        setTodayAllTasks(findTodayTasks([...allTasks, task]));\r\n        setDeadlines(getDeadlinesTask([...allTasks, task]));\r\n\r\n    }\r\n\r\n    function diff(obj1, obj2) {\r\n        if (obj1.id === obj2.id) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        // var o1 = obj1 instanceof Object;\r\n        // var o2 = obj2 instanceof Object;\r\n        // if (!o1 || !o2) {/*  判断不是对象  */\r\n        //     return obj1 === obj2;\r\n        // }\r\n\r\n        // if (Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n        //     return false;\r\n        //     //Object.keys() 返回一个由对象的自身可枚举属性(key值)组成的数组,例如：数组返回下表：let arr = [\"a\", \"b\", \"c\"];console.log(Object.keys(arr))->0,1,2;\r\n        // }\r\n\r\n        // for (var attr in obj1) {\r\n        //     var t1 = obj1[attr] instanceof Object;\r\n        //     var t2 = obj2[attr] instanceof Object;\r\n        //     if (t1 && t2) {\r\n        //         return diff(obj1[attr], obj2[attr]);\r\n        //     } else if (obj1[attr] !== obj2[attr]) {\r\n        //         return false;\r\n        //     }\r\n        // }\r\n        // return true;\r\n    }\r\n    function removeTask(theEvent) {\r\n        let tallTasks_copy = todayAllTasks.slice();\r\n        tallTasks_copy.forEach(function (item, index, arr) {\r\n            if (diff(item, theEvent)) {\r\n                arr.splice(index, 1);\r\n            }\r\n        });\r\n        setTodayAllTasks(tallTasks_copy);\r\n        setAllTasks(tallTasks_copy.concat(futureTasks));\r\n        setDeadlines(getDeadlinesTask(tallTasks_copy.concat(futureTasks)));\r\n        setPunchTimes(getPunchTimes(tallTasks_copy.concat(futureTasks)))\r\n        localStorage.removeItem('tasks');\r\n        localStorage.setItem('tasks', JSON.stringify(tallTasks_copy.concat(futureTasks)));\r\n\r\n    }\r\n    function punchCard(theEvent) {\r\n        let tallTasks_copy = allTasks.slice();\r\n        for(let i=0;i<tallTasks_copy.length;i++){\r\n            if (diff(tallTasks_copy[i], theEvent)) {\r\n                tallTasks_copy[i].times ? tallTasks_copy[i].times++ : tallTasks_copy[i].times = 1;\r\n                tallTasks_copy[i].lastTime = moment();\r\n                alert(tallTasks_copy[i].times);\r\n            }\r\n        };\r\n        setTodayAllTasks(findTodayTasks(tallTasks_copy));\r\n        setAllTasks(tallTasks_copy);\r\n        setPunchTimes(getPunchTimes(tallTasks_copy));\r\n        localStorage.removeItem('tasks');\r\n        localStorage.setItem('tasks', JSON.stringify(tallTasks_copy));\r\n\r\n    }\r\n    function changeTask(task) {\r\n        let allTasks_copy = allTasks.slice();\r\n        for (let i = 0; i < allTasks_copy.length; i++) {\r\n            if (diff(task, allTasks_copy[i])) {\r\n                let temp = Object.keys(task);\r\n                for (let m = 0; m < temp.length; m++) {\r\n                    if ((task[temp[m]] !== undefined) && (temp[m] !== 'id')) {\r\n                        (allTasks_copy[i])[temp[m]] = task[temp[m]];\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        setAllTasks(allTasks_copy);\r\n        setTodayAllTasks(findTodayTasks(allTasks_copy));\r\n        setFutureTasks(findFutureTasks(allTasks_copy));\r\n        setDeadlines(getDeadlinesTask(allTasks_copy));\r\n        localStorage.removeItem('tasks');\r\n        localStorage.setItem('tasks', JSON.stringify(allTasks_copy));\r\n\r\n    }\r\n    function getPunchTimes(tasks) {\r\n        let task_copy = tasks;\r\n        let result = [];\r\n        task_copy.forEach((item) => {\r\n            if (item.eventType === 'longTermPlan') {\r\n                if (!item.times) \r\n                { item.times = 0; }\r\n                result.push(item);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    function markCalendar(current) {\r\n        let list = [];\r\n        for (let i = 0; i < deadlines.length; i++) {\r\n            if (moment(current).isSame(deadlines[i].eventEndTime, 'days')) {\r\n                list.push(deadlines[i]);\r\n            }\r\n        }\r\n        return (<div>\r\n            {list.map(item => (\r\n                <Popover content={item.eventNote} title={item.eventTitle}><Badge color='red'></Badge></Popover>\r\n            ))}\r\n        </div>);\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n\r\n\r\n            <Layout>\r\n\r\n                <Header style={{ color: 'white', height: '10vh', backgroundColor: '#191970' }} >{headerTip}</Header>\r\n                <Layout>\r\n                    <Sider style={{ color: 'white', backgroundColor: '#B0C4DE', padding: '0 10px' }} width={250}>\r\n                        <ShowTasks allTasks={allTasks} removeTask={removeTask} changeTask={changeTask} />\r\n                    </Sider>\r\n                    <Content style={{ height: '90vh', width: '80vw' }}>\r\n                        <TodayTask todayAllTasks={todayAllTasks} removeTask={removeTask} punchCard={punchCard} />\r\n                    </Content>\r\n                    <Sider style={{ color: 'white', backgroundColor: '#B0C4DE', padding: '0 10px' }} width={400}>\r\n                        <Calendar\r\n                            style={{ margin: '10px 0' }}\r\n                            fullscreen={false}\r\n                            disabledDate={(current) => { return current && current.isBefore(moment(), 'days') }}\r\n                            dateCellRender={markCalendar}\r\n                        />\r\n                        <ShowPunchTimes punchTimes={punchTimes}/>\r\n\r\n\r\n\r\n                    </Sider>\r\n\r\n\r\n                </Layout>\r\n                <Footer >曼婷制作</Footer>\r\n            </Layout>\r\n\r\n            <NewEvent addTasks={addTask} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ShowPunchTimes=({punchTimes})=>{\r\n    function helpPer(t) {\r\n        if (t === 'everyDay') \r\n        return '今日';\r\n        if (t === 'everyWeek') \r\n        return '本周';\r\n        if (t === 'everyMonth') \r\n        return '本月';\r\n        return '已打卡';\r\n    }\r\n    const gridStyle = {\r\n        width: '25%',\r\n        textAlign: 'center',\r\n        backgroundColor:'white'\r\n      };\r\n    return (\r\n        <List\r\n        dataSource={punchTimes}\r\n        renderItem={(item) => (\r\n            <Card.Grid\r\n            style={gridStyle}\r\n                title={item.eventTitle}\r\n            >\r\n                <p>{item.eventTitle}</p>\r\n                <Statistic\r\n                \r\n                    title={helpPer(item.eventPeriod)}\r\n                    value={item.times}\r\n                    valueStyle={{ color: '#3f8600' }}\r\n                    suffix='次'\r\n                />\r\n\r\n            </Card.Grid>\r\n        )\r\n\r\n        } />\r\n    );\r\n}\r\nexport default Todo","import React from 'react';\nimport './App.css';\nimport LoginIn from './LoginIn'\nimport Todo from './Todo'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\" >\n        \n        <Switch>\n          <Route exact path=\"/\">\n            <LoginIn />\n          </Route>\n          <Route path=\"/todo\">\n            <Todo />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}